Паттерн Посетитель (Visitor) относится к поведенческим шаблонам проектирования,
который позволяет добавлять новые операции к уже существующим классам без изменения их исходного кода.
Основная идея заключается в том, чтобы отделить алгоритмы от объектов, над которыми они работают.

Ключевая идея
Основная идея паттерна "Посетителя" заключается в том, чтобы отделить операции от объектов.
Вместо того, чтобы объекты реализовывали операции самостоятельно, они делегируют операции посетителям,
которые знают, как работать с объектами определенного типа.
Это позволяет добавлять новые операции к объектам без изменения самих объектов.

Как работает паттерн Посетитель?
Интерфейсы посетителей: Определяется интерфейс для посетителя, который будет содержать методы для каждого типа элемента,
который нужно посетить.
Элементы: Это объекты, которые будут посещаться. Каждый элемент реализует метод Accept, который принимает объект-посетитель.
Конкретный посетитель: Реализует интерфейс посетителя и содержит логику обработки элементов.
Обход элементов: Элементы вызывают метод Visit у посетителя внутри метода Accept.

Заключение
Шаблон Посетитель полезен, когда необходимо добавить новую функциональность к объектам, не изменяя их исходный код.
Он особенно эффективен при работе с иерархиями классов, где требуется обработка разных типов объектов разными способами.